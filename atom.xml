<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[SquareLemon]]></title>
  <link href="http://blog.squarelemon.com/atom.xml" rel="self"/>
  <link href="http://blog.squarelemon.com/"/>
  <updated>2015-09-23T15:17:17-04:00</updated>
  <id>http://blog.squarelemon.com/</id>
  <author>
    <name><![CDATA[Lee Brotherson]]></name>
    <email><![CDATA[contact@squarelemon.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MiTM'ing the MiTM'ers]]></title>
    <link href="http://blog.squarelemon.com/blog/2015/06/21/mitm-the-mitmers/"/>
    <updated>2015-06-21T14:55:10-04:00</updated>
    <id>http://blog.squarelemon.com/blog/2015/06/21/mitm-the-mitmers</id>
    <content type="html"><![CDATA[<p>Last week I mentioned that <a href="https://www.twitter.com/myrcurial/">James
Arlen</a> and <a href="https://www.twitter.com/synackpse/">I</a> gave the
<a href="http://blog.squarelemon.com/blog/2015/06/12/sc-congress-toronto/">closing keynote at SCCongress
Toronto</a>.  We had planned to do a live demo as part of the talk, but after
reaching the venue and connecting to the wifi we found that it would not work
as planned, specifically because the venue wifi was &ldquo;correcting&rdquo; my tampering
of the DNS on the demo victim, they were still visiting the real website.</p>

<p>And so a new demo was born, the &ldquo;How this venue wifi is tampering with our, and
your, connection right now&rdquo; demo.</p>

<p>It appeared that DNS on this network was not used to determine which webserver
to contact when browsing to a page, it was merely a method to ensure that
connections were routed to anything other than the local network, at which
point something else took over.  This is pretty easy to demonstrate, by setting up
an /etc/hosts entry (used to locally override DNS for a particular FQDN) for a
website, directing it to an unused RFC1918 address which was not on the local
network, and by definition not on the internet either, we can test how DNS is
used.  The site still loaded up fine in a browser, this leads me to suspect
that a transparent proxy is inline somewhere, intercepting all traffic and then
using the host header in the HTTP request to determine which pages to deliver
as opposed to using the destination addres in the of the IP header.</p>

<p>Using tcptraceroute on port 80 we also find that every website tested was
apparently located on the local LAN, which of course they are not:</p>

<blockquote><p>$ sudo tcptraceroute www.google.com 80<br/>Selected device en0, address 192.168.1.4, port 55333 for outgoing packets<br/>Tracing the path to www.google.com (66.185.95.49) on TCP port 80 (http), 30 hops max<br/> 1  66.185.95.49 [open]  0.576 ms  0.744 ms  0.515 ms</p></blockquote>


<p>Finally using any packetsniffer (wireshark in this case), we can capture the
payload of a transaction and look for artifacts which may give away what is
happening.  In this instance it was very easy to spot:</p>

<blockquote><p>X-Cache: MISS from localhost<br/>X-Cache-Lookup: MISS from localhost:3128<br/>Via: 1.1 localhost:3128 (squid/2.7.STABLE9)</p></blockquote>


<p>These lines in the HTTP response header are not sent by the webserver, I was
visiting my own webserver, so I&rsquo;m pretty sure of this fact.  Anyone who has
experience in this field knows that this screams transparent proxy.  And if you
look up the version which is so helpfully displayed, you will notice that it
screams horribly out of date and probably not patched proxy.</p>

<p>The point that we made at the time is that a high percentage of users in the
audience are probably on this network as we spoke, that they were being MiTM&rsquo;d
without their knowledge.  If someone had compromised that old version of squid
that they could have been doing any number of things to those http connections
and the devices using them.</p>

<p>As security professionals we talk about the dangers of conference and coffee
shop wifi all the time, from the point of view of other users of the network
being malicious.  It&rsquo;s always worth remembering that you can&rsquo;t trust the venues
themselves to be completely clean either.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SC Congress Toronto]]></title>
    <link href="http://blog.squarelemon.com/blog/2015/06/12/sc-congress-toronto/"/>
    <updated>2015-06-12T10:38:51-04:00</updated>
    <id>http://blog.squarelemon.com/blog/2015/06/12/sc-congress-toronto</id>
    <content type="html"><![CDATA[<p>Yesterday <a href="https://twitter.com/myrcurial/">James Arlen</a> and <a href="https://twitter.com/synackpse/">I</a> gave the closing Keynote at <a href="http://www.sccongress.com/toronto/">SC Congress Toronto</a>.<br /></p>

<p>If you would like to see the slides, we have made the available on slideshare:</p>

<iframe src="https://www.slideshare.net/slideshow/embed_code/key/81965WLKIkp1Dr" width="476" height="400" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>


<p>And the pre-recorded demo is available here (the live demo was, unfortunately, not recorded):</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/ew-2kMLcdLs" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BSides Toronto 2015 is coming...]]></title>
    <link href="http://blog.squarelemon.com/blog/2015/05/28/bsides-toronto-2015-is-coming-dot-dot-dot/"/>
    <updated>2015-05-28T10:12:50-04:00</updated>
    <id>http://blog.squarelemon.com/blog/2015/05/28/bsides-toronto-2015-is-coming-dot-dot-dot</id>
    <content type="html"><![CDATA[<p>Returning for it&rsquo;s third year, <a href="http://www.bsidesto.ca/">BSides
Toronto</a> has just been announced for 7th November 2015 and the CFP opened,
so if you want to speak get your submission in!  (details on <a
href="http://www.bsidesto.ca/">the BSidesTO website</a>).<br /></p>

<p>Keep an eye out on <a href="http://twitter.com/bsidesto/">Twitter</a> too as
announcements when registration opens, speakers are announced, etc.<br /></p>

<p>I won&rsquo;t be speaking this year because I have the pleasure of taking one of the
spots as an organiser for the conference, so I will definitely be there&hellip;
lurking :)</p>

<p><img src="http://blog.squarelemon.com/images/upload/glitchsides.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stealthier Attacks and Smarter Defending with TLS Fingerprinting]]></title>
    <link href="http://blog.squarelemon.com/blog/2015/05/25/stealthier-attacks-and-smarter-defending-with-tls-fingerprinting/"/>
    <updated>2015-05-25T10:37:21-04:00</updated>
    <id>http://blog.squarelemon.com/blog/2015/05/25/stealthier-attacks-and-smarter-defending-with-tls-fingerprinting</id>
    <content type="html"><![CDATA[<p>I am really pleased to announce that I have decided to try my hand at talking
at conferences again this year and have a new talk ready &ldquo;Stealthier Attacks
and Smarter Defending with TLS Fingerprinting&rdquo;.  Despite being a talk on TLS
(and SSL) there isn&rsquo;t any complex crypto or mathematics, this is aimed at
defenders and attackers rather than cryptographers.  Here&rsquo;s the abstract:<br /></p>

<blockquote><p>Ever been busted because you man in the middle software (which does TLS properly) alerted someone to your bad certificate?  No more! Want to detect certain types of connections leaving your network, but can&#8217;t keep the IP blacklist up to date?  This could be the answer.</p><p>This talk includes an introduction to both TLS and man in the middle attacks, a walkthrough on what TLS fingerprints contain, how to create your own fingerprints, how we use the fingerprints in several scenarios, a demo, and a discussion of implications and pitfalls.</p><p>TLS provides transport security to all manner of connections from legitimate financial transactions to private conversations and malware calling home.  The inability to analyse encrypted traffic protects its users, whether they are legitimate or malicious.  This talk explores a technique for quickly and passively fingerprinting TLS clients and adapting our responses for the purposes of both attack and defence. Attackers can make automated decisions concerning when to man in the middle a connection and when to let the clients pass through silently, remaining stealthy.  Defenders can gain insight into what is making encrypted connections within their networks without access to either endpoints or cryptographic keying material.</p></blockquote>


<p>I am really excited to have been accepted to speak at <a href="http://www.sector.ca/">SecTor</a> for the second time in October (page for my session <a href="http://www.sector.ca/Program/Sessions/Session-Details/stealthier-attacks-and-smarter-defending-with-tls-fingerprinting">here</a>).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MiTM in Telecoms Networks.  I told you so... sort of.]]></title>
    <link href="http://blog.squarelemon.com/blog/2015/03/18/mitm-in-telecoms-networks-i-told-you-so-dot-dot-dot-sort-of/"/>
    <updated>2015-03-18T10:38:14-04:00</updated>
    <id>http://blog.squarelemon.com/blog/2015/03/18/mitm-in-telecoms-networks-i-told-you-so-dot-dot-dot-sort-of</id>
    <content type="html"><![CDATA[<p>For anyone that has read this blog before, you will probably know that at the end of 2014 I gave my &ldquo;Corporation in The Middle&rdquo; talk at both <a href="http://blog.squarelemon.com/blog/2014/10/29/corporation-in-the-middle/">SecTor</a> and <a href="http://blog.squarelemon.com/blog/2014/12/29/bsides-toronto-video-and-slides/">BSides Toronto</a>.  In short my ISP (<a href="http://www.rogers.com">Rogers</a>) used a platform to Man (Corporation) in The Middle my and every other customers connection in order to insert notification banners at the top of pages in certain circumstances, such approaching your bandwidth cap.  I argued during my &ldquo;What Could Possibly Go Wrong?&rdquo; section that even if my ISP was completely well intentioned that the mere presence of this platform presented a risk to customers.  What would happen if they had a rogue member of staff, became coerced in some way or were hacked?  A malicious 3rd party could use their platform to inject javascript to drop 0-day or socially engineer users with fake Flash or Java updates, for example.</p>

<p>Then last night I read the article <i>&ldquo;<a href="http://www.theglobeandmail.com/news/national/nsa-trying-to-map-rogers-rbc-communications-traffic-leak-shows/article23491118/">NSA trying to map Rogers, RBC communications traffic, leak shows</a>&rdquo;</i> in The Globe and Mail.  It describes a leaked NSA document entitled <i>“Private Networks: Analysis, Contextualization and Setting the Vision”</i>, the article goes on to say <i>&ldquo;A comparison of this document with previous Snowden leaks suggests it may be a preliminary step in broad efforts to identify, study and, if deemed necessary, “exploit” organizations’ internal communication networks.&rdquo;</i>.  Of course there are no details as to if this ever came to pass and if it did to what degree any penetration took place, however I believe that this does indeed demonstrate that my fears were not completely unfounded.</p>

<p>If anybody were to penetrate the networks of any ISPs running tools such as this, these injection/interception platforms provide an easy mechanism to attack the customer base en mass.  To provide an indication of scale Perftech, the manufacturer of the platform used by my ISP, published in January that their <a href="http://www.perftech.com/newsroom/perftech-adds-telco-giant-roster-q4-grows-subscriber-reach-30-2014/">overall subscriber reach is currently 19.5 million</a>, and that&rsquo;s just one manufacturer.</p>

<p>There are many platforms that &ldquo;legitimately&rdquo; Man in The Middle our communications, however, unless properly managed and secured they can become a very useful tool in an adversaries arsenal.</p>

<p>Corporations which are targetted by nation state intelligence agencies are unlikely to successfully defend themselves.  Making announcements via these interception platforms as opposed to using something more (less?) transparent and obvious to the user removes the opportunity for the user to make informed security decisions.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSI:Cyber - it's not _all_ bad]]></title>
    <link href="http://blog.squarelemon.com/blog/2015/03/05/csi-cyber-its-not-all-bad/"/>
    <updated>2015-03-05T16:26:33-05:00</updated>
    <id>http://blog.squarelemon.com/blog/2015/03/05/csi-cyber-its-not-all-bad</id>
    <content type="html"><![CDATA[<p>I made my inaugural post on the <a href="https://twitter.com/LeviathanSec">@LeviathanSec</a> blog. <a href="https://www.leviathansecurity.com/blog/unpopular-opinion-csi-cyber-could-be-good-for-information-security/">Why CSI: Cyber could actually be good for infosec</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quick &amp; Dirty Crapware Analysis - IDS Rule Creation Foo]]></title>
    <link href="http://blog.squarelemon.com/blog/2015/03/04/quick-and-dirty-crapware-analysis-ids-rule-creation-foo/"/>
    <updated>2015-03-04T08:31:18-05:00</updated>
    <id>http://blog.squarelemon.com/blog/2015/03/04/quick-and-dirty-crapware-analysis-ids-rule-creation-foo</id>
    <content type="html"><![CDATA[<p>Recently I have made some brief posts on the <a href="https://github.com/LeeBrotherston/snort">Snort/Suricata rules</a> that I wrote to detect <a href="http://blog.squarelemon.com/blog/2015/02/20/superfish-detection/">SuperFish</a> and <a href="http://blog.squarelemon.com/blog/2015/02/23/privdog-detection/">PrivDog</a>, two pieces of Crapware/Malware/Adware/PUP that insert themselves as a Certificate Authority in the local browsers and proceed to Man in the Middle HTTPS traffic for the purposes of injecting ads.</p>

<p>In those posts I mentioned that CipherSuite fingerprinting was the key to creating the rules, however I didn&rsquo;t give a very comprehensive technical blow-by-blow.  So, now I have a new rule to add having noticed another application Man in the Middle&#8217;ing browsers (<a href="http://geniusbox.net/">GeniusBox</a>) using the same technique, it seems like an apt time to write up what I have been doing in a more useful way.<!-- more --></p>

<p>Although many of these miscreant applications insert scripts into webpages that are hosted on remote sources, they all conduct their Man in the Middle attacks on the local machine.  The chosen technique is to, either via network hooks or by setting browsers to use localhost as a proxy, ensure that the connection from the browser is terminated locally and a connection to the webserver is made via their &ldquo;application&rdquo;.  They don&rsquo;t hide this, it is trivial to spot with some ghetto forensics.</p>

<p>First we can use <code>netstat -ano</code> to look at the connections and associated pid&rsquo;s on the local host.  Notice how PID 3388 is making a local connection to a listening PID 4084 on port 49546?  Also note that PID 4084 is also making a number of connections to external hosts on ports 80 (http) and 443 (https):</p>

<p><img src="http://blog.squarelemon.com/images/upload/netstat.png"></p>

<p>By looking at the details tab on taskmanager we can see which executable names those pids pertain to.  In this case it&rsquo;s iexplore.exe (Internet Explorer) and Client.exe (<a href="http://geniusbox.net/">GeniusBox</a>):</p>

<p><img src="http://blog.squarelemon.com/images/upload/taskman.png"></p>

<p>Finally, by looking at the process details in Task Manager we can see which directory the binary resides in and can look at that location to see if it really is the app we suspect it is:</p>

<p><img src="http://blog.squarelemon.com/images/upload/install_dir.png"></p>

<p>Certainly looks that way!</p>

<p>Let&rsquo;s do some CipherSuite fingerprinting and see if we can create a new snort rule.</p>

<p>First we need to sniff the connection, this is easy, I have installed the application in question inside a virtual machine and so can sniff on one of the virtual interfaces using tcpdump/wireshark/t-shark/whatever on my host OS.  I sniff web browsing traffic both before and after I infect the host on as many browsers as I wish to test (in this case Internet Explorer, Firefox and Chrome).  Remember this is SSL so in theory you shouldn&rsquo;t be able to decrypt the traffic and determine what the user agent string is (of course with a MiTM attack if you have the private certs it&rsquo;s entirely possible, as is the case if <a href="https://jimshaver.net/2015/02/11/decrypting-tls-browser-traffic-with-wireshark-the-easy-way/">the browser is configured to save the ssl keys</a>); I would recommend a separate pcap file for each browser both before and after (6 in total in this case) to keep analysis easy.</p>

<p>Each of the captures can be loaded into WireShark in turn for easy analysis (other packet capture tools will show the info too, but WireShark just makes it easy), the hex is helpfully highlighted at the bottom so we know which data to include in a snort/suricata rule:</p>

<p><img src="http://blog.squarelemon.com/images/upload/wireshark.png" style="border: 1px solid #000000;"></p>

<p>The list is not only the supported Cipher Suites, it is also in preference order.  My research thus far shows the the combination of supported Cipher Suites, preference order and total number of suites offered is fairly unique to each browser family.  It remains static between each connection that the browser makes, this is not a per-session variable.</p>

<p>When looking at <a href="http://blog.squarelemon.com/blog/2015/02/20/superfish-detection/">SuperFish</a> and <a href="http://blog.squarelemon.com/blog/2015/02/23/privdog-detection/">PrivDog</a> I noticed that the 3 browsers all had their own fingerprints prior to infection, but exhibited the same (fourth) fingerprint when intercepted by the applications.  Presumably because the applications terminate SSL locally (resigning it with with their own CA that they installed) and they need to implement a (fourth) SSL client of their own to make the outbound connection to the real webserver, and we can detect that.</p>

<p>Why is this useful?  Network administrators often do not have a handle on exactly what is on their network, BYOD and other initiatives mean that self-prodcured of self-managed devices are prevalent in many environments.  For this reason desktop management systems may not be aware of the presence of these applications, but an IDS/IPS platform can detect them based on network traffic using this technique.  Furthermore, web server administrators can detect on this signature in order to determine if one of their clients (someone browsing to their website) has been affected and potentially warn/block them as desired.  Of course there is always the possibility that someone malicious could detect this for other reasons, but that&rsquo;s a whole other post ;)</p>

<p>We can simply take the hex from WireShark and use that as the &ldquo;content&rdquo; for a snort/suricata rule.  Furthermore we can use an offset statement to reduce the chances that we are just picking up the same string of bytes reoccurring in some other context.  The Cipher Suite list in the Client Hello packet is a fixed length from the start of the packet contents.  Using these two details we are able to create a rule:</p>

<p><code>alert tcp any any &ndash;> any 443 (msg:&ldquo;GeniusBox Cipher Suite Profile Matched&rdquo;; flow:to_server; reference:url,<a href="https://gist.githubusercontent.com/LeeBrotherston/523ffbc02f2407fd213c/raw/008b77bab61d26761119f07d518779ed6edfbd74/sid:1000006;">https://gist.githubusercontent.com/LeeBrotherston/523ffbc02f2407fd213c/raw/008b77bab61d26761119f07d518779ed6edfbd74/sid:1000006;</a> content:&ldquo;|00 18 c0 14 c0 13 00 35 00 2f c0 0a c0 09 00 38 00 32 00 0a 00 13 00 05 00 04|&rdquo;; offset: 44; sid:1000006; rev:1;)</code></p>

<p>(The content also includes the proceeding two bytes which is the ciphersuites length field)</p>

<p>The next phase is to test the rules, but that will be a post of it&rsquo;s own (stay tuned!)</p>

<p>I have added this to <a href="https://github.com/LeeBrotherston/snort">my snort/suricata rules for interception detection</a> which also include coverage for <a href="http://blog.squarelemon.com/blog/2015/02/20/superfish-detection/">SuperFish</a>, <a href="http://blog.squarelemon.com/blog/2015/02/23/privdog-detection/">PrivDog</a> and the techniques described in my <a href="http://blog.squarelemon.com/blog/2014/12/29/bsides-toronto-video-and-slides/">Corporation in the Middle talk</a>.</p>

<p>Any feedback on the rules are greatly appreciated.  Especially if anyone has particular successes to share of failures to highlight that I can use to improve the accuracy.  As always you can <a href="https://twitter.com/synackpse">reach me on twitter, I am @synackpse</a> or <a href="https://github.com/LeeBrotherston/snort/issues">raise an issue in github</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PrivDog Detection]]></title>
    <link href="http://blog.squarelemon.com/blog/2015/02/23/privdog-detection/"/>
    <updated>2015-02-23T14:42:07-05:00</updated>
    <id>http://blog.squarelemon.com/blog/2015/02/23/privdog-detection</id>
    <content type="html"><![CDATA[<p>In much the same way as I was <a href="http://blog.squarelemon.com/blog/2015/02/20/superfish-detection/">able to detect hosts infected with SuperFish</a> by profiling the changes in Cipher Suites used in their SSL connections (by virtue of SuperFish essentially having it&rsquo;s own SSL client) I have been able to create a fingerprint for PrivDog.  For those who are interested, the ciphersuites used by the PrivDog client are:<!-- More --></p>

<blockquote><p>Cipher Suites (44 suites)<br/>    Cipher Suite: TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA (0xc014)<br/>    Cipher Suite: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA (0xc00a)<br/>    Cipher Suite: TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA (0xc022)<br/>    Cipher Suite: TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA (0xc021)<br/>    Cipher Suite: TLS_DHE_RSA_WITH_AES_256_CBC_SHA (0x0039)<br/>    Cipher Suite: TLS_DHE_DSS_WITH_AES_256_CBC_SHA (0x0038)<br/>    Cipher Suite: TLS_ECDH_RSA_WITH_AES_256_CBC_SHA (0xc00f)<br/>    Cipher Suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA (0xc005)<br/>    Cipher Suite: TLS_RSA_WITH_AES_256_CBC_SHA (0x0035)<br/>    Cipher Suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA (0xc013)<br/>    Cipher Suite: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA (0xc009)<br/>    Cipher Suite: TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA (0xc01f)<br/>    Cipher Suite: TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA (0xc01e)<br/>    Cipher Suite: TLS_DHE_RSA_WITH_AES_128_CBC_SHA (0x0033)<br/>    Cipher Suite: TLS_DHE_DSS_WITH_AES_128_CBC_SHA (0x0032)<br/>    Cipher Suite: TLS_ECDH_RSA_WITH_AES_128_CBC_SHA (0xc00e)<br/>    Cipher Suite: TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA (0xc004)<br/>    Cipher Suite: TLS_RSA_WITH_AES_128_CBC_SHA (0x002f)<br/>    Cipher Suite: TLS_ECDHE_RSA_WITH_RC4_128_SHA (0xc011)<br/>    Cipher Suite: TLS_ECDHE_ECDSA_WITH_RC4_128_SHA (0xc007)<br/>    Cipher Suite: TLS_ECDH_RSA_WITH_RC4_128_SHA (0xc00c)<br/>    Cipher Suite: TLS_ECDH_ECDSA_WITH_RC4_128_SHA (0xc002)<br/>    Cipher Suite: TLS_RSA_WITH_RC4_128_SHA (0x0005)<br/>    Cipher Suite: TLS_RSA_WITH_RC4_128_MD5 (0x0004)<br/>    Cipher Suite: TLS_DHE_RSA_WITH_SEED_CBC_SHA (0x009a)<br/>    Cipher Suite: TLS_DHE_DSS_WITH_SEED_CBC_SHA (0x0099)<br/>    Cipher Suite: TLS_RSA_WITH_SEED_CBC_SHA (0x0096)<br/>    Cipher Suite: TLS_DHE_RSA_WITH_DES_CBC_SHA (0x0015)<br/>    Cipher Suite: TLS_DHE_DSS_WITH_DES_CBC_SHA (0x0012)<br/>    Cipher Suite: TLS_RSA_WITH_DES_CBC_SHA (0x0009)<br/>    Cipher Suite: TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA (0x0014)<br/>    Cipher Suite: TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA (0x0011)<br/>    Cipher Suite: TLS_RSA_EXPORT_WITH_DES40_CBC_SHA (0x0008)<br/>    Cipher Suite: TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA (0xc012)<br/>    Cipher Suite: TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA (0xc008)<br/>    Cipher Suite: TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA (0xc01c)<br/>    Cipher Suite: TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA (0xc01b)<br/>    Cipher Suite: TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA (0x0016)<br/>    Cipher Suite: TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA (0x0013)<br/>    Cipher Suite: TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA (0xc00d)<br/>    Cipher Suite: TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA (0xc003)<br/>    Cipher Suite: TLS_RSA_WITH_3DES_EDE_CBC_SHA (0x000a)<br/>    Cipher Suite: TLS_RSA_WITH_IDEA_CBC_SHA (0x0007)<br/>    Cipher Suite: TLS_EMPTY_RENEGOTIATION_INFO_SCSV (0x00ff)</p></blockquote>


<p>I have updated my <a href="https://github.com/LeeBrotherston/snort/blob/master/snort_interception.rules">Interception Snort Rules</a> to include this.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SuperFish Detection]]></title>
    <link href="http://blog.squarelemon.com/blog/2015/02/20/superfish-detection/"/>
    <updated>2015-02-20T14:53:52-05:00</updated>
    <id>http://blog.squarelemon.com/blog/2015/02/20/superfish-detection</id>
    <content type="html"><![CDATA[<p>Much has been in the press the past couple of days regarding Superfish, specifically being pre-installed on Lenovo hardware, however the issues discussed are relevant to any device with Superfish installed.  It just so happens that Lenovo made the decision to bundle it up in the factory.</p>

<p>There are a number of write-ups on the technical nature of this malware/adware, and I won&rsquo;t attempt to rehash those, they are most likely better than anything that I could contribute anyway.  I did however want to be able to detect this on the network to offer network administrators a chance to locate devices on their network which may be affected.</p>

<p>By creating <a href="https://blog.filippo.io/make-your-own-superfish-infected-vm/">a Superfish infected VM</a> we can examine how the software works in a relatively controlled fashion.<!-- More --></p>

<p>By using &ldquo;netstat -ano&rdquo; both before and after infection it comes obvious that the browsers are redirected to C:\Program Files\Lenovo\VisualDiscovery\VisualDiscovery.exe which listens locally and then makes its own connection to webservers, essentially proxying the connection and resigning SSL connections back to the browser with &quot;<a href="http://blog.erratasec.com/2015/02/extracting-superfish-certificate.html">That Cert</a>&quot;.  This lead me to believe that SuperFish, or more specifically VisualDiscovery.exe, had it&rsquo;s own SSL client code.  As Rob points out in his <a href="http://blog.erratasec.com/2015/02/extracting-superfish-certificate.html">writeup</a> there are proper ways to examine how this works and ghetto ways&hellip;.  I went ghetto.</p>

<p>We can connect to a collection of HTTPS webservers using Internet Explorer, FireFox and Chrome before infecting the machine, then doing it again after infection and sniff the whole lot.  Next we open up the captures in WireShark and see what&rsquo;s the same, what&rsquo;s different, etc.  I noticed that the browsers favoured TLS1.2 and SuperFish prefers TLS1.1, for example.  However the thing that stood out most was the SuperFish selection of Cipher Suites&hellip;</p>

<blockquote><p>Cipher Suites Length: 104<br/>Cipher Suites (52 suites)<br/>Cipher Suite: TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA (0xc014)<br/>Cipher Suite: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA (0xc00a)<br/>Cipher Suite: TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA (0xc022)<br/>Cipher Suite: TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA (0xc021)<br/>Cipher Suite: TLS_DHE_RSA_WITH_AES_256_CBC_SHA (0x0039)<br/>Cipher Suite: TLS_DHE_DSS_WITH_AES_256_CBC_SHA (0x0038)<br/>Cipher Suite: TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA (0x0088)<br/>Cipher Suite: TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA (0x0087)<br/>Cipher Suite: TLS_ECDH_RSA_WITH_AES_256_CBC_SHA (0xc00f)<br/>Cipher Suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA (0xc005)<br/>Cipher Suite: TLS_RSA_WITH_AES_256_CBC_SHA (0x0035)<br/>Cipher Suite: TLS_RSA_WITH_CAMELLIA_256_CBC_SHA (0x0084)<br/>Cipher Suite: TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA (0xc012)<br/>Cipher Suite: TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA (0xc008)<br/>Cipher Suite: TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA (0xc01c)<br/>Cipher Suite: TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA (0xc01b)<br/>Cipher Suite: TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA (0x0016)<br/>Cipher Suite: TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA (0x0013)<br/>Cipher Suite: TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA (0xc00d)<br/>Cipher Suite: TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA (0xc003)<br/>Cipher Suite: TLS_RSA_WITH_3DES_EDE_CBC_SHA (0x000a)<br/>Cipher Suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA (0xc013)<br/>Cipher Suite: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA (0xc009)<br/>Cipher Suite: TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA (0xc01f)<br/>Cipher Suite: TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA (0xc01e)<br/>Cipher Suite: TLS_DHE_RSA_WITH_AES_128_CBC_SHA (0x0033)<br/>Cipher Suite: TLS_DHE_DSS_WITH_AES_128_CBC_SHA (0x0032)<br/>Cipher Suite: TLS_DHE_RSA_WITH_SEED_CBC_SHA (0x009a)<br/>Cipher Suite: TLS_DHE_DSS_WITH_SEED_CBC_SHA (0x0099)<br/>Cipher Suite: TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA (0x0045)<br/>Cipher Suite: TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA (0x0044)<br/>Cipher Suite: TLS_ECDH_RSA_WITH_AES_128_CBC_SHA (0xc00e)<br/>Cipher Suite: TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA (0xc004)<br/>Cipher Suite: TLS_RSA_WITH_AES_128_CBC_SHA (0x002f)<br/>Cipher Suite: TLS_RSA_WITH_SEED_CBC_SHA (0x0096)<br/>Cipher Suite: TLS_RSA_WITH_CAMELLIA_128_CBC_SHA (0x0041)<br/>Cipher Suite: TLS_RSA_WITH_IDEA_CBC_SHA (0x0007)<br/>Cipher Suite: TLS_ECDHE_RSA_WITH_RC4_128_SHA (0xc011)<br/>Cipher Suite: TLS_ECDHE_ECDSA_WITH_RC4_128_SHA (0xc007)<br/>Cipher Suite: TLS_ECDH_RSA_WITH_RC4_128_SHA (0xc00c)<br/>Cipher Suite: TLS_ECDH_ECDSA_WITH_RC4_128_SHA (0xc002)<br/>Cipher Suite: TLS_RSA_WITH_RC4_128_SHA (0x0005)<br/>Cipher Suite: TLS_RSA_WITH_RC4_128_MD5 (0x0004)<br/>Cipher Suite: TLS_DHE_RSA_WITH_DES_CBC_SHA (0x0015)<br/>Cipher Suite: TLS_DHE_DSS_WITH_DES_CBC_SHA (0x0012)<br/>Cipher Suite: TLS_RSA_WITH_DES_CBC_SHA (0x0009)<br/>Cipher Suite: TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA (0x0014)<br/>Cipher Suite: TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA (0x0011)<br/>Cipher Suite: TLS_RSA_EXPORT_WITH_DES40_CBC_SHA (0x0008)<br/>Cipher Suite: TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 (0x0006)<br/>Cipher Suite: TLS_RSA_EXPORT_WITH_RC4_40_MD5 (0x0003)<br/>Cipher Suite: TLS_EMPTY_RENEGOTIATION_INFO_SCSV (0x00ff)</p></blockquote>


<p>So, I have added this as a signature to my <a href="https://github.com/LeeBrotherston/snort/blob/master/snort_interception.rules">snort rules for interception (MiTM) detection</a>.  These rules also include detection for the appliances discovered during my <a href="http://blog.squarelemon.com/blog/2014/10/29/corporation-in-the-middle/">Corporation in The Middle</a> talk, however if you are only interested in SuperFish you want rule sid:1000004.</p>

<p>If anyone has luck, epic failure or anything else I would be really interested in hearing more from you.  I&rsquo;m <a href="http://twitter.com/synackpse/">@SynAckPse</a> on twitter.</p>

<p>Enjoy!</p>

<p>[Edit: This same technique has allowed me to <a href="http://blog.squarelemon.com/blog/2015/02/23/privdog-detection/">fingerprint PrivDog</a> also.  That fingerprint is included in the <a href="https://github.com/LeeBrotherston/snort/blob/master/snort_interception.rules">snort rules</a>]</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Man in The Middle reach grows]]></title>
    <link href="http://blog.squarelemon.com/blog/2015/02/19/man-in-the-middle-reach-grows/"/>
    <updated>2015-02-19T16:34:42-05:00</updated>
    <id>http://blog.squarelemon.com/blog/2015/02/19/man-in-the-middle-reach-grows</id>
    <content type="html"><![CDATA[<p>With all the talk of <a href="http://www.theregister.co.uk/2015/02/19/superfish_lenovo_spyware/">Lenovo</a> and <a href="http://arstechnica.com/security/2015/02/lenovo-pcs-ship-with-man-in-the-middle-adware-that-breaks-https-connections/">Superfish</a> in the press, now seems a good time to mention an update which is personal to me on the topic of Man in The Middle attacks.</p>

<p>People have asked me how widespread the <a href="http://blog.squarelemon.com/blog/2014/10/29/corporation-in-the-middle/">man in the middle attempts made my by ISP</a> actually are.  Well thankfully the manufacturer of the equipment used has put out a press statement around their current &ldquo;subscriber reach&rdquo; which you can read in full <a href="http://www.perftech.com/newsroom/perftech-adds-telco-giant-roster-q4-grows-subscriber-reach-30-2014/">here</a>.  The important paragraph for us is this:</p>

<blockquote><p>New-customer wins along with existing-customer expansions for 2014 resulted in a substantial increase in the aggregate subscriber reach across all PerfTech’s ISP customers.  Previously at roughly 15 million subscribers, that total climbed to approximately 19.5 million for 2014, a gain of 30%.</p></blockquote>


<p>If these figures are to be believed, that&rsquo;s 19.5 million subscribers.  By my understanding a subscriber is a connection (e.g. one cable or DSL line), not a single device so the total user count is probably significantly higher.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Value Of Cloud Security (report)]]></title>
    <link href="http://blog.squarelemon.com/blog/2015/02/11/the-value-of-cloud-security-report/"/>
    <updated>2015-02-11T13:42:15-05:00</updated>
    <id>http://blog.squarelemon.com/blog/2015/02/11/the-value-of-cloud-security-report</id>
    <content type="html"><![CDATA[<p>Today my employer, <a href="http://www.leviathansecurity.com">Leviathan Security</a>, released <a href="http://www.leviathansecurity.com/cloudsecurity/">three reports</a> written by <a href="http://twitter.com/myrcurial">James Arlen</a>, <a href="http://twitter.com/ussjoin">Brendan O&#8217;Connor</a> and <a href="http://twitter.com/synackpse">myself</a> on the overarching topic of Cloud Security.</p>

<p>I&rsquo;m pleased to say that they seem to have been well received by the press.  <a href="http://www.zdnet.com/article/cloud-security-reports-slam-data-protection-national-internets-access-myths/">ZDNet</a> (<a href="http://www.zdnet.com/article/how-infosec-hiring-lost-its-way-harsh-findings-in-leviathan-report/">twice</a>), <a href="http://www.itworldcanada.com/article/ottawa-risking-data-by-keeping-it-local-says-consultant/101843">IT World Canada</a> &amp; <a href="http://www.cloudwedge.com/leviathan-security-publishes-3-reports-on-cloud-data-security-4365/">CloudWedge</a> have all picked up on it so far.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OS X Sandbox QuickStart]]></title>
    <link href="http://blog.squarelemon.com/blog/2015/02/10/os-x-sandbox-quickstart/"/>
    <updated>2015-02-10T10:30:14-05:00</updated>
    <id>http://blog.squarelemon.com/blog/2015/02/10/os-x-sandbox-quickstart</id>
    <content type="html"><![CDATA[<p>The <a href="https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/sandbox-exec.1.html">sandbox feature on OS X</a> is really useful for restricting what applications have access to in more granular and controlled fashion than standard file permissions allow.  However writing the initial sandbox profile can be problematic for many users, it&rsquo;s not always clear what an application needs access to in order to operate in the expected way; there are a number of system files, libraries and such like, that an application quite rightly needs to read.</p>

<p>The news is not all bad, there are some really useful commands built in to OS X which can help.<!-- More --></p>

<p>Working on the assumption that the threat model that we are protecting against is an application being exploited via a vulnerability or such like (rather than this being a malicious app out of the box), we can run the application without restrictions initially all the while logging which it accesses.  To do this we create a nearly blank sandbox profile which does nothing but log:</p>

<blockquote><p>(version 1)<br/>(trace &#8220;/tmp/trace_output.sb&#8221;)</p></blockquote>


<p>Next we can run our application via sandbox-exec using this sandbox profile:</p>

<blockquote><p>sandbox-exec -f ./trace.sb /Applications/SomeApplication.app/Contents/MacOS/SomeApplication</p></blockquote>


<p>The application will run slowly, it is after all tracing (logging) every access to a file along with the type of access (read, write, read/write, read metadata, etc) along with other information like accesses to sysctl variables.  This will generate the file /tmp/trace_output.sb which is a working, though huge and inelegant, sandbox profile.  Simply running vim (without even opening a file) will create a 238 line profile (imagine what a browser does).  This can easily be trimmed by sandbox-simplify:</p>

<blockquote><p>sandbox-simplify /tmp/trace_output.sb > ./tracesimple.sb</p></blockquote>


<p>What this essentially does is the sandbox profile equivalent of sort | uniq and then groups the output to be a little easier to read.  This takes the sample vim profile down to 41 lines from the 238 lines it was before.</p>

<p>Let&rsquo;s test if that worked:</p>

<blockquote><p>sandbox-exec -f tracesimple.sb /Applications/SomeApplication.app/Contents/MacOS/SomeApplication</p></blockquote>


<p>The application should now run as expected but have access to nothing outside of what was specified in the sandbox profile.  In the case of the vim example, the code runs as expected but has no permission to open any documents (try opening a file); we have sandboxing \o/</p>

<p>Of course running an application which cannot interact with the filesystem may not be entirely useful, especially for a tool such as vim.  At this point we can begin manually editing the sandbox profile.  We can add additional permissions that we wish to use to ensure that the application can open files that we want it to.  The system has a selection of example profile that you may wish to borrow from in <i>/System/Library/Sandbox/Profiles/</i> alternatively I found <a href="http://reverse.put.as/wp-content/uploads/2011/09/Apple-Sandbox-Guide-v1.0.pdf">this guide</a> really useful.</p>

<p>Of course you may wish to tweak or debug permissions further, this is easy, just add <i>(trace &ldquo;/tmp/trace_output.sb&rdquo;)</i> to your sandbox profile as we did at the start and you will create a trace file for any additional permissions which may be required.  Enjoy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Brakeing Down Security Podcast - ISP Man in the middle]]></title>
    <link href="http://blog.squarelemon.com/blog/2015/02/09/brakeing-down-security-podcast-isp-man-in-the-middle/"/>
    <updated>2015-02-09T10:09:46-05:00</updated>
    <id>http://blog.squarelemon.com/blog/2015/02/09/brakeing-down-security-podcast-isp-man-in-the-middle</id>
    <content type="html"><![CDATA[<p>I made a return visit to the <a href="http://brakeingsecurity.blogspot.ca/2015/02/2015-005-is-your-isp-doing-man-in.html">Brakeing Down Security as a guest to discuss ISPs who Man in The Middle their customers</a>.  We discuss my Corporation in The Middle talk from <a href="http://blog.squarelemon.com/blog/2014/10/29/corporation-in-the-middle/">SecTor</a> &amp; <a href="http://blog.squarelemon.com/blog/2014/12/29/bsides-toronto-video-and-slides/">BSidesTO</a>.  Thanks again to <a href="https://twitter.com/bryanbrake">Bryan</a> and <a href="https://twitter.com/boettcherpwned">Brian</a> for having me!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Brakeing Down Security Podcast - Threat Modeling]]></title>
    <link href="http://blog.squarelemon.com/blog/2015/02/04/brakeing-down-security-podcast-threat-modeling/"/>
    <updated>2015-02-04T13:17:01-05:00</updated>
    <id>http://blog.squarelemon.com/blog/2015/02/04/brakeing-down-security-podcast-threat-modeling</id>
    <content type="html"><![CDATA[<p>This week I was lucky enough to be a guest on the <a href="http://brakeingsecurity.blogspot.ca/">Brakeing Down Security podcast</a>, the specific episode is available <a href="http://brakeingsecurity.blogspot.ca/2015/01/2015-005-threat-modeling-with-lee.html">here</a>, or you can subscribe to the podcast <a href="https://itunes.apple.com/us/podcast/brakeing-down-security-podcast/id799131292?mt=2">here</a>.</p>

<br />


<p>Thanks to <a href="https://twitter.com/bryanbrake">Bryan</a> and <a href="https://twitter.com/boettcherpwned">Brian</a> for having me :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Press Page]]></title>
    <link href="http://blog.squarelemon.com/blog/2015/02/04/press-page/"/>
    <updated>2015-02-04T11:28:07-05:00</updated>
    <id>http://blog.squarelemon.com/blog/2015/02/04/press-page</id>
    <content type="html"><![CDATA[<p>Last year I would have never anticipated being quoted in the press, however it has happened a couple of times recently.  To keep track of this I have added a <a href="http://blog.squarelemon.com/press/">press page</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Snort Rules - CitM]]></title>
    <link href="http://blog.squarelemon.com/blog/2015/01/27/citm-snort-rules/"/>
    <updated>2015-01-27T09:33:16-05:00</updated>
    <id>http://blog.squarelemon.com/blog/2015/01/27/citm-snort-rules</id>
    <content type="html"><![CDATA[<p>Last year I gave my Corporation In The Middle talk in which I explained how my ISP has been man-in-the-middle&#8217;ing my connection to inject a warning banner into the top of webpages I visited (talk content <a href="blog.squarelemon.com/blog/2014/10/29/corporation-in-the-middle/">here</a> and <a href="http://blog.squarelemon.com/blog/2014/12/29/bsides-toronto-video-and-slides/">here</a>).</p>

<p>Part of this involved traffic analysis to discover artifacts of the injection process.  In an effort to make this process more automated, repeatable and accessible I have put together a few snort rules to allow others to alert on this condition:<br /></p>

<p><a href="https://github.com/LeeBrotherston/snort"><a href="https://github.com/LeeBrotherston/snort">https://github.com/LeeBrotherston/snort</a></a><br /></p>

<p>One rule is commented out as it is noisy and prone to false positives, however I have included it (disabled) for now, for reference.  The other three rules have been tested by me on my personal environment and seem to be free from false positives, however this is only a limited test and so feedback would be really appreciated from anyone running them elsewhere.<br /></p>

<p>Of course these are far from complete in terms of detection of man in the middle generically, they only pertain to the specific technique outlined in my talk, however I will endeavour to update them as I obtain further information.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MiTM at 30,000 feet]]></title>
    <link href="http://blog.squarelemon.com/blog/2015/01/04/mitm-at-30/"/>
    <updated>2015-01-04T23:38:11-05:00</updated>
    <id>http://blog.squarelemon.com/blog/2015/01/04/mitm-at-30</id>
    <content type="html"><![CDATA[<p>In the past week I have seen a few mentions on twitter regarding <a href="http://twitter.com/gogo">Gogo Air</a> presenting fake SSL certs for YouTube to users of their in air Internet access service:<br /><!-- More --></p>

<blockquote class="twitter-tweet" lang="en"><p>hey <a href="https://twitter.com/Gogo">@Gogo</a>, why are you issuing *.google.com certificates on your planes? <a href="http://t.co/UmpIQ2pDaU">pic.twitter.com/UmpIQ2pDaU</a></p>&mdash; Adrienne Porter Felt (@__apf__) <a href="https://twitter.com/__apf__/status/551083956326920192">January 2, 2015</a></blockquote>


<script async src="http://blog.squarelemon.com//platform.twitter.com/widgets.js" charset="utf-8"></script>




<br />




<blockquote class="twitter-tweet" lang="en"><p>No, not OK. <a href="https://twitter.com/Gogo">@Gogo</a> please justify breaking the Internet for your paying users. Huge privacy connotations! <a href="http://t.co/AxZOPEK0oO">pic.twitter.com/AxZOPEK0oO</a></p>&mdash; Ben Hughes (@benjammingh) <a href="https://twitter.com/benjammingh/status/551589274123247616">January 4, 2015</a></blockquote>


<script async src="http://blog.squarelemon.com//platform.twitter.com/widgets.js" charset="utf-8"></script>




<br />


<p>I started to wonder if they were using the same technique that I had recently been researching and discussing in my <a href="http://blog.squarelemon.com/blog/2014/10/29/corporation-in-the-middle/">Corporation in The Middle</a> talk.  Luckily for me, my friend <a href="https://twitter.com/benjammingh/">Benjammingh</a> was one of those who noticed and was currently on a Gogo flight, so I asked him to take a packetdump for analysis.<br /><br /><!-- More --></p>

<p>The short summary is that this is not the same technique, in fact this looks like in-flight transparent proxying&hellip;.<br /><br /></p>

<p>For one thing there is this giveaway in the http response header:<br /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>X-Cache: MISS from 172.19.134.2
</span><span class='line'>X-Cache-Lookup: MISS from 172.19.134.2:3128
</span><span class='line'>Via: 1.0 172.19.134.2:3128 (squid/2.6.STABLE14)</span></code></pre></td></tr></table></div></figure>




<br />


<p>This is indeed squid, quite an old install of squid, on the default port.<br /><br /></p>

<p>Secondly, the TTL on all the packets was 64.  Now, most OS&rsquo;s tend to use round numbers for default TTL values (32, 64, 128).  Assuming this to be the case, this would indicate that either YouTube is exactly 64 hops away or the packets are originating from the local network segment, which would be consistent with a local (transparent) proxy.</p>

<br />


<p>It&rsquo;s hardly an in-depth analysis, but at this point it seems to be more than we have at the minute, and it would explain how they are Man in The Middle&#8217;ing the connection, the question still remains&hellip;. why?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No we don't]]></title>
    <link href="http://blog.squarelemon.com/blog/2015/01/02/no-we-dont/"/>
    <updated>2015-01-02T10:00:00-05:00</updated>
    <id>http://blog.squarelemon.com/blog/2015/01/02/no-we-dont</id>
    <content type="html"><![CDATA[<p>I just got a festive present from my ISP, <a href="http://www.rogers.com">Rogers</a>.<br /><br /></p>

<p>Following my <a href="http://blog.squarelemon.com/blog/2014/10/29/corporation-in-the-middle/">recent <a href="http://blog.squarelemon.com/blog/2014/12/24/bsides-toronto-video-and-slides/">talks</a> regarding ISP packet injection/interception and data collection I wrote to the privacy officer at Rogers and asked, under PIPEDA, that I be supplied all information regarding my account, including any information that they have gathered such as URLs of sites visited, etc.<br /></p>

<br />


<p>I got a fairly standard response which said that they did not collect any such data, to which I replied:<!-- More --></p>

<br />


<blockquote><p>Hi,</p><p>I recently sent a letter to you asking for details of data that Rogers hold on me as required by PIPEDA.  As expected you, or someone in your department, kindly replied.  Thank you!</p><p>Most of it made sense however I did note that there was one area in particular that is inaccurate/untrue, specifically your statement &#8220;We do not collect the IP addresses or the domain names of the sites that you have visited or the time, dates and port numbers&#8221;.  I understand it is entirely possible that this was not deliberate and it&#8217;s more likely that you are unaware of some of the data that Rogers holds, nonetheless I thought that I should mention this so that this mistake is not replicated in the future placing you in breach of PIPEDA.</p><p>To provide you some insight, when you insert consumer messaging into webpages, such as the &#8220;you have exceeded 75% of your bandwidth allowance&#8230;&#8221; message, you use a system called the Bulletin System manufactured by Perftech to do so.  Putting aside the legality of this tool (I believe this breaks the Telecommunications Act) for a moment, you should note that this tool tracks user web browsing behavior (other than encrypted sessions) and keeps a history of the past 30 days tied to user account, irrespective of if that user is receiving any messaging at the time or not.</p><p>If it helps you to track down this system, one of it&#8217;s nodes (REDACTED) is currently live on the IP REDACTED within your network.</p><p>If you would like further information on this I have a sizeable amount of documentation and evidence to support this.</p><p>Please feel free to come back to me if you have any questions or queries.</p><p>Thanks</p><p>Lee</p></blockquote>




<br /><br />


<p>Their response?<br /><br /></p>

<p><img src="http://blog.squarelemon.com/images/corp_in_the_middle/rogers_letter_update.jpeg"></p>

<br /><br />


<p>I don&rsquo;t feel that this is going to progress anytime soon.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BSides Toronto Video &amp; Slides]]></title>
    <link href="http://blog.squarelemon.com/blog/2014/12/29/bsides-toronto-video-and-slides/"/>
    <updated>2014-12-29T11:59:00-05:00</updated>
    <id>http://blog.squarelemon.com/blog/2014/12/29/bsides-toronto-video-and-slides</id>
    <content type="html"><![CDATA[<p>At the end of November I gave my talk, &ldquo;Corporation In The Middle [BSidesTO Edition]&rdquo; at <a href="http://bsidesto.ca">BSides Toronto 2014</a>.</p>

<br />


<p>The recording of the talk is now online and available here:<br /></p>

<iframe width="560" height="315" src="http://blog.squarelemon.com//www.youtube.com/embed/_YeaYIPM-QI" frameborder="0" allowfullscreen></iframe>


<br />


<p>You can play along at home with the slides, here:<br /></p>

<iframe src="http://blog.squarelemon.com//www.slideshare.net/slideshow/embed_code/41918170" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="http://blog.squarelemon.com//www.slideshare.net/LeeBrotherston/corporation-in-the-middle-bsidesto-edition" title="Corporation In The Middle - BSidesTO Edition" target="_blank">Corporation In The Middle &ndash; BSidesTO Edition</a> </strong> from <strong><a href="http://blog.squarelemon.com//www.slideshare.net/LeeBrotherston" target="_blank">Lee Brotherston</a></strong> </div></p>

<br />

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Corporation In The Middle]]></title>
    <link href="http://blog.squarelemon.com/blog/2014/10/29/corporation-in-the-middle/"/>
    <updated>2014-10-29T22:59:58-04:00</updated>
    <id>http://blog.squarelemon.com/blog/2014/10/29/corporation-in-the-middle</id>
    <content type="html"><![CDATA[<p>A few days ago I presented my talk, &ldquo;Corporation In The Middle&rdquo; at <a href="http://sector.ca">SecTor 2014</a>.  I will be presenting an updated and truncated version of the talk at <a href="http://www.bsidesto.ca/">BSides Toronto</a> in November of this year.</p>

<p>If you are interested in seeing the talk you can do so here:</p>

<iframe src="http://blog.squarelemon.com//player.vimeo.com/video/110367213" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>


<br />


<p>If so inclined, you can also <a href="http://www.slideshare.net/LeeBrotherston/lee-brotherston-corporation-in-the-middle">get the slides here</a>.</p>

<br />


<p>The original blurb was:
<i>My ISP deliberately MiTM&rsquo;d my connection.  This talk discusses how they did it, how I detected what they did and what this means.  This talk covers what I learnt over three months of analysis focusing on the technology involved both on the ISP side and my own. I cover in detail how I went about identifying and mapping the ISPs hidden network components and how they modify IP connections. I will briefly cover what this means to customers of their service.  During the talk I will provide technical evidence as well as walk through how I used open source tools to unmask this Corp In The Middle attack.
</i></p>
]]></content>
  </entry>
  
</feed>
